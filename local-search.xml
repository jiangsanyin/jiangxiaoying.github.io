<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>夜莺nightingalev6.7.2通过kubelet采集docker容器监控数据</title>
    <link href="/2024/05/26/%E5%A4%9C%E8%8E%BAnightingalev6-7-2%E9%80%9A%E8%BF%87kubelet%E9%87%87%E9%9B%86docker%E5%AE%B9%E5%99%A8%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE/"/>
    <url>/2024/05/26/%E5%A4%9C%E8%8E%BAnightingalev6-7-2%E9%80%9A%E8%BF%87kubelet%E9%87%87%E9%9B%86docker%E5%AE%B9%E5%99%A8%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>本人是基于nightingaleV6.7.2与k8s-amd64-v1.23.10进行了此文章中的操作。</p><p>使用categraf-v0.3.45-linux-amd64做数据采集工具，容器监控数据采集使用的cadvisor插件。关于categraf中使用caadvisor插件的密文文档：<a href="https://flashcat.cloud/docs/content/flashcat-monitor/categraf/plugin/cadvisor/%E3%80%82">https://flashcat.cloud/docs/content/flashcat-monitor/categraf/plugin/cadvisor/。</a> 但是我当时看了此文档后，还是有一个配置项不知如何配置。</p><p>相关的配置文档其实官网已经给出，只是我先前也没有找到，最后在快猫星云团队孔飞大佬的提示下，成功完成配置，配置文档链接在此：<a href="https://flashcat.cloud/blog/kubernetes-monitoring-05-kubelet/">https://flashcat.cloud/blog/kubernetes-monitoring-05-kubelet/</a></p><h1 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h1><p>参考：<a href="https://flashcat.cloud/blog/kubernetes-monitoring-05-kubelet/">https://flashcat.cloud/blog/kubernetes-monitoring-05-kubelet/</a></p><h2 id="创建认证信息"><a href="#创建认证信息" class="headerlink" title="创建认证信息"></a>创建认证信息</h2><p>其中关于10248、10250端口的说明，上述文档中已有了。现在遇到的一个问题是”<a href="https://localhost:10250/metrics%E2%80%9C%E8%AE%BF%E9%97%AE%E6%97%B6%E9%9C%80%E8%A6%81%E9%89%B4%E6%9D%83%EF%BC%8C%E6%8C%89%E7%85%A7%E5%A6%82%E4%B8%8B%E6%96%B9%E5%BC%8F%E5%88%9B%E5%BB%BAk8s%E4%B8%AD%E7%9A%84%E7%9B%B8%E5%85%B3%E8%B4%A6%E5%8F%B7%E4%B8%8E%E8%A7%92%E8%89%B2%E3%80%82">https://localhost:10250/metrics“访问时需要鉴权，按照如下方式创建k8s中的相关账号与角色。</a></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">Namespace</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">flashcat</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">rules:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">apiGroups:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">&quot;&quot;</span><br>  <span class="hljs-attr">resources:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/metrics</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/stats</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">nodes/proxy</span><br>  <span class="hljs-attr">verbs:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">get</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">flashcat</span><br><span class="hljs-meta">---</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">rbac.authorization.k8s.io/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRoleBinding</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">roleRef:</span><br>  <span class="hljs-attr">apiGroup:</span> <span class="hljs-string">rbac.authorization.k8s.io</span><br>  <span class="hljs-attr">kind:</span> <span class="hljs-string">ClusterRole</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">subjects:</span><br><span class="hljs-bullet">-</span> <span class="hljs-attr">kind:</span> <span class="hljs-string">ServiceAccount</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">namespace:</span> <span class="hljs-string">flashcat</span><br></code></pre></td></tr></table></figure><p>将上述内容保存为auth.yaml并应用到k8s集群中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl apply -f auth.yaml<br>kubectl get ClusterRole | grep categraf-daemon<br>kubectl get sa -n flashcat<br></code></pre></td></tr></table></figure><p><img src="https://s2.loli.net/2024/05/26/4KhLuVCSbj5HgF2.png" alt="image-20240526231854765"></p><h2 id="测试上述创建的权限"><a href="#测试上述创建的权限" class="headerlink" title="测试上述创建的权限"></a>测试上述创建的权限</h2><p>已经成功创建了 ServiceAccount，把ServiceAccount的内容打印出来看一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl get sa categraf-daemonset -n flashcat -o yaml<br></code></pre></td></tr></table></figure><p>这个ServiceAccount实际是关联了一个Secret，再看看这个Secret的内容：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs shell">kubectl get sa categraf-daemonset -n flashcat -o yaml<br>apiVersion: v1<br>kind: ServiceAccount<br>metadata:<br>  annotations:<br>    kubectl.kubernetes.io/last-applied-configuration: |<br>      &#123;&quot;apiVersion&quot;:&quot;v1&quot;,&quot;kind&quot;:&quot;ServiceAccount&quot;,&quot;metadata&quot;:&#123;&quot;annotations&quot;:&#123;&#125;,&quot;name&quot;:&quot;categraf-daemonset&quot;,&quot;namespace&quot;:&quot;flashcat&quot;&#125;&#125;<br>  creationTimestamp: &quot;2024-05-26T15:17:43Z&quot;<br>  name: categraf-daemonset<br>  namespace: flashcat<br>  resourceVersion: &quot;1265&quot;<br>  uid: 9fdf7004-22f6-410f-9696-40485e38db50<br>secrets:<br>- name: categraf-daemonset-token-h4p94<br></code></pre></td></tr></table></figure><p>把这个token字段拿到，然后base64转码一下，作为Bearer Token来请求测试一下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell">token=`kubectl -n flashcat get secret categraf-daemonset-token-h4p94 -o jsonpath=&#123;.data.token&#125; | base64 -d`<br><br>curl -s -k -H &quot;Authorization: Bearer $token&quot; https://localhost:10250/metrics &gt; aaaa<br>head -n 10 aaaa<br><span class="hljs-meta prompt_">#</span><span class="language-bash">输出如下内容表示已经正常访问https://localhost:10250/metrics</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP apiserver_audit_event_total [ALPHA] Counter of audit events generated and sent to the audit backend.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE apiserver_audit_event_total counter</span><br>apiserver_audit_event_total 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP apiserver_audit_requests_rejected_total [ALPHA] Counter of apiserver requests rejected due to an error <span class="hljs-keyword">in</span> audit logging backend.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE apiserver_audit_requests_rejected_total counter</span><br>apiserver_audit_requests_rejected_total 0<br><span class="hljs-meta prompt_"># </span><span class="language-bash">HELP apiserver_client_certificate_expiration_seconds [ALPHA] Distribution of the remaining lifetime on the certificate used to authenticate a request.</span><br><span class="hljs-meta prompt_"># </span><span class="language-bash">TYPE apiserver_client_certificate_expiration_seconds histogram</span><br>apiserver_client_certificate_expiration_seconds_bucket&#123;le=&quot;0&quot;&#125; 0<br>apiserver_client_certificate_expiration_seconds_bucket&#123;le=&quot;1800&quot;&#125; 0<br></code></pre></td></tr></table></figure><p>至此，我们已经成功获取到”<a href="https://localhost:10250/metrics%E2%80%9C%E7%9A%84token%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%B0%86%E5%85%B6%E9%85%8D%E7%BD%AE%E5%88%B0categraf%E7%9A%84conf/input.cadvisor/cadvisor.toml">https://localhost:10250/metrics“的token，可以将其配置到categraf的conf/input.cadvisor/cadvisor.toml</a> 文件中的bearer_token_string配置项。但如果要正常获取k8s集群中所有容器数据，需要为k8s集群每个节点都安装categraf并如此配置。如果后续k8s集群新增节点了，新增加的节点也需要重复此配置，考虑到此，引出下文中的创建daemonset。</p><p>如果使用了如下daemonset，理应将categraf中的cadvisor插件关闭，否则二者重复了。</p><h2 id="创建daemonset"><a href="#创建daemonset" class="headerlink" title="创建daemonset"></a>创建daemonset</h2><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">config.toml:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    [global]</span><br><span class="hljs-string">    hostname = &quot;$HOSTNAME&quot;</span><br><span class="hljs-string">    interval = 15</span><br><span class="hljs-string">    providers = [&quot;local&quot;]</span><br><span class="hljs-string">    [writer_opt]</span><br><span class="hljs-string">    batch = 2000</span><br><span class="hljs-string">    chan_size = 10000</span><br><span class="hljs-string">    [[writers]]</span><br><span class="hljs-string">    url = &quot;http://172.20.180.50:17000/prometheus/v1/write&quot;</span><br><span class="hljs-string">    timeout = 5000</span><br><span class="hljs-string">    dial_timeout = 2500</span><br><span class="hljs-string">    max_idle_conns_per_host = 100</span><br><span class="hljs-string"></span><span class="hljs-meta">---</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">ConfigMap</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br><span class="hljs-attr">data:</span><br>  <span class="hljs-attr">prometheus.toml:</span> <span class="hljs-string">|</span><br><span class="hljs-string">    [[instances]]</span><br><span class="hljs-string">    urls = [&quot;http://127.0.0.1:10249/metrics&quot;]</span><br><span class="hljs-string">    labels = &#123; job=&quot;kube-proxy&quot; &#125;</span><br><span class="hljs-string">    [[instances]]</span><br><span class="hljs-string">    urls = [&quot;https://127.0.0.1:10250/metrics&quot;]</span><br><span class="hljs-string">    bearer_token_file = &quot;/var/run/secrets/kubernetes.io/serviceaccount/token&quot;</span><br><span class="hljs-string">    use_tls = true</span><br><span class="hljs-string">    insecure_skip_verify = true</span><br><span class="hljs-string">    labels = &#123; job=&quot;kubelet&quot; &#125;</span><br><span class="hljs-string">    [[instances]]</span><br><span class="hljs-string">    urls = [&quot;https://127.0.0.1:10250/metrics/cadvisor&quot;]</span><br><span class="hljs-string">    bearer_token_file = &quot;/var/run/secrets/kubernetes.io/serviceaccount/token&quot;</span><br><span class="hljs-string">    use_tls = true</span><br><span class="hljs-string">    insecure_skip_verify = true</span><br><span class="hljs-string">    labels = &#123; job=&quot;cadvisor&quot; &#125;</span><br></code></pre></td></tr></table></figure><p>保存为categraf-configmap-v2.yaml 文件。如上内容中，”172.20.180.50:17000“是夜莺服务所在的ip与端口，根据实际情况修改。</p><p><code>hostname = &quot;$HOSTNAME&quot;</code> 这个配置用了 <code>$</code> 符号，后面创建 Daemonset 的时候会把 HOSTNAME 这个环境变量注入，让 Categraf 自动拿到。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此文件</span><br>kubectl apply -f categraf-configmap-v2.yaml -n flashcat<br>configmap/categraf-config created<br>configmap/categraf-input-prometheus created<br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span><br><span class="hljs-attr">kind:</span> <span class="hljs-string">DaemonSet</span><br><span class="hljs-attr">metadata:</span><br>  <span class="hljs-attr">labels:</span><br>    <span class="hljs-attr">app:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-daemonset</span><br><span class="hljs-attr">spec:</span><br>  <span class="hljs-attr">selector:</span><br>    <span class="hljs-attr">matchLabels:</span><br>      <span class="hljs-attr">app:</span> <span class="hljs-string">categraf-daemonset</span><br>  <span class="hljs-attr">template:</span><br>    <span class="hljs-attr">metadata:</span><br>      <span class="hljs-attr">labels:</span><br>        <span class="hljs-attr">app:</span> <span class="hljs-string">categraf-daemonset</span><br>    <span class="hljs-attr">spec:</span><br>      <span class="hljs-attr">containers:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">env:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">TZ</span><br>          <span class="hljs-attr">value:</span> <span class="hljs-string">Asia/Shanghai</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HOSTNAME</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">status.hostIP</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">HOSTIP</span><br>          <span class="hljs-attr">valueFrom:</span><br>            <span class="hljs-attr">fieldRef:</span><br>              <span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span><br>              <span class="hljs-attr">fieldPath:</span> <span class="hljs-string">status.hostIP</span><br>        <span class="hljs-attr">image:</span> <span class="hljs-string">flashcatcloud/categraf:v0.2.18</span><br>        <span class="hljs-attr">imagePullPolicy:</span> <span class="hljs-string">IfNotPresent</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">categraf</span><br>        <span class="hljs-attr">volumeMounts:</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/categraf/conf</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br>        <span class="hljs-bullet">-</span> <span class="hljs-attr">mountPath:</span> <span class="hljs-string">/etc/categraf/conf/input.prometheus</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br>      <span class="hljs-attr">hostNetwork:</span> <span class="hljs-literal">true</span><br>      <span class="hljs-attr">serviceAccountName:</span> <span class="hljs-string">categraf-daemonset</span><br>      <span class="hljs-attr">restartPolicy:</span> <span class="hljs-string">Always</span><br>      <span class="hljs-attr">tolerations:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">effect:</span> <span class="hljs-string">NoSchedule</span><br>        <span class="hljs-attr">operator:</span> <span class="hljs-string">Exists</span><br>      <span class="hljs-attr">volumes:</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">configMap:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-config</span><br>      <span class="hljs-bullet">-</span> <span class="hljs-attr">configMap:</span><br>          <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br>        <span class="hljs-attr">name:</span> <span class="hljs-string">categraf-input-prometheus</span><br></code></pre></td></tr></table></figure><p>将上述内容保存为categraf-daemonset-v2.yaml文件。根据官方文档，创建 Daemonset，会把 HOSTNAME 环境变量注入进去。官方文档默认使用的是spec.nodeName，我改成使用status.hostIP，这样后续采集到的指标数据中，ident属性的值就不再是容器宿主机名，而是容器宿主机ip了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">#</span><span class="language-bash">应用此文件</span><br>kubectl apply -f categraf-daemonset-v2.yaml -n flashcat<br>daemonset.apps/categraf-daemonset created<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">稍等一会儿，等pod正常运行</span><br>kubectl get pods -n flashcat -o wide<br>NAME                       READY   STATUS    RESTARTS   AGE   IP              NODE       NOMINATED NODE   READINESS GATES<br>categraf-daemonset-jpgxs   1/1     Running   0          24s   172.20.180.25   worker02   &lt;none&gt;           &lt;none&gt;<br>categraf-daemonset-rdlbk   1/1     Running   0          25s   172.20.180.21   master01   &lt;none&gt;           &lt;none&gt;<br>categraf-daemonset-xnqdj   1/1     Running   0          24s   172.20.180.24   worker01   &lt;none&gt;           &lt;none&gt;<br><span class="hljs-meta prompt_"></span><br><span class="hljs-meta prompt_">#</span><span class="language-bash">daemonset运行正常</span><br>kubectl get daemonset -n flashcat<br>NAME                 DESIRED   CURRENT   READY   UP-TO-DATE   AVAILABLE   NODE SELECTOR   AGE<br>categraf-daemonset   3         3         3       3            3           &lt;none&gt;          31s<br></code></pre></td></tr></table></figure><h2 id="确认采集到的数据"><a href="#确认采集到的数据" class="headerlink" title="确认采集到的数据"></a>确认采集到的数据</h2><p>查看kubelet本身的指标，它是从 Kubelet 的 <code>/metrics</code> 接口采集的：</p><p><img src="https://s2.loli.net/2024/05/26/q5BRhDNsGo13nk4.png" alt="image-20240526232912388"></p><p> 再确认cAdvisor 采集的指标及其数据，它是从 <code>/metrics/cadvisor</code> 接口采集的：</p><p><img src="https://s2.loli.net/2024/05/26/8QzN3Tg2weJx7YP.png" alt="image-20240526233510353"></p><h2 id="cadvisor仪表盘"><a href="#cadvisor仪表盘" class="headerlink" title="cadvisor仪表盘"></a>cadvisor仪表盘</h2><p>此时如果直接使用官方提供的cadvisor仪表盘克隆一个仪表盘，那么得到的仪表盘将没有数据，需要再手动修改下仪表盘的定义。此处作者本人修改后仪表盘还有些问题，暂时就不分享，大体效果如下</p><p><img src="https://s2.loli.net/2024/05/26/w74M2IXmv3BzZGn.png" alt="image-20240526234321868"></p>]]></content>
    
    
    
    <tags>
      
      <tag>k8s 监控 夜莺 nightingale</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/05/26/hello-world/"/>
    <url>/2024/05/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
